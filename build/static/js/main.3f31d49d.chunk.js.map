{"version":3,"sources":["Components/Charts/LineChart.js","Components/Extra/Show.js","Components/Extra/Edit.js","Components/Extra/Create.js","Components/Extra/List.js","Components/Drink/Show.js","Components/Drink/Edit.js","Components/Drink/Create.js","Components/Drink/List.js","Components/Main/Show.js","Components/Main/Edit.js","Components/Main/Create.js","Components/Main/List.js","Components/Resto/Show.js","Components/Resto/Edit.js","Components/Resto/Create.js","Components/Resto/List.js","Components/Starter/Show.js","Components/Starter/Edit.js","Components/Starter/Create.js","Components/Starter/List.js","Components/Order/Show.js","Components/Order/Edit.js","Components/Order/Create.js","Components/Charts/BarChart.js","Components/Order/List.js","Components/User/Show.js","Components/User/Edit.js","Components/User/Create.js","Components/User/List.js","Components/Table/Show.js","Components/Table/Edit.js","Components/Table/Create.js","Components/Table/List.js","Components/Rating/Show.js","Components/Rating/Edit.js","Components/Rating/Create.js","Components/Rating/List.js","Base64Uploader.js","App.js","serviceWorker.js","index.js"],"names":["values","PostTitle","_ref","record","react_default","a","createElement","concat","extraName","ExtraShow","props","Show","Object","assign","title","Show_PostTitle","SimpleShowLayout","TextField","source","label","ExtraEdit","Edit","Edit_PostTitle","SimpleForm","TextInput","validate","required","NumberInput","number","minValue","maxValue","ExtraCreate","Create","ExtraList","List","Datagrid","ShowButton","EditButton","drinkName","DrinkShow","Drink_Show_PostTitle","ImageField","DrinkEdit","Drink_Edit_PostTitle","ImageInput","accept","placeholder","multiple","DrinkCreate","DrinkList","mainName","MainShow","Main_Show_PostTitle","MainEdit","Main_Edit_PostTitle","MainCreate","MainList","restaurantName","RestoShow","Resto_Show_PostTitle","RestoEdit","Resto_Edit_PostTitle","SelectInput","choices","id","name","RestoCreate","RestoList","starterName","StarterShow","Starter_Show_PostTitle","StarterEdit","Starter_Edit_PostTitle","StarterCreate","StarterList","OrderShow","Order_Show_PostTitle","BooleanField","DateField","ReferenceField","reference","OrderEdit","form","BooleanInput","style","display","float","marginLeft","OrderCreate","options","hAxis","vAxis","viewWindow","min","legend","graphData","valuesPerDay","hadData","LineGraph","ListController","controllerProps","Fragment","data","undefined","keys","map","i","date","moment","createdAt","format","exist","item","totalAmount","length","push","sort","b","unshift","pop","index_esm","chartType","width","height","legendToggle","BarGraph","locale","day","PostActions","currentSort","exporter","filterValues","resource","total","CardActions","ExportButton","disabled","filter","OrderList","actions","List_PostActions","field","order","expand","Edit_OrderEdit","LineChart_LineGraph","objectSpread","BarChart_BarGraph","displayName","UserShow","User_Show_PostTitle","UserEdit","User_Edit_PostTitle","email","UserCreate","UserList","EmailField","tableName","link","document","interval","querySelector","appendChild","setTimeout","textContent","addEventListener","ev","canvas","href","toDataURL","download","TableShow","Table_Show_PostTitle","className","lib_default","value","size","level","TableEdit","Table_Edit_PostTitle","ReferenceInput","optionText","TableCreate","TableList","RatingShow","Rating_Show_PostTitle","RatingEdit","Rating_Edit_PostTitle","RatingCreate","RatingList","convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","rawFile","onload","result","onerror","addUploadCapabilities","requestHandler","type","params","image","formerPictures","p","File","newPictures","all","then","base64Pictures","picture64","src","transformedNewPictures","toConsumableArray","authConfig","userProfilePath","userAdminProp","dataProvider","addUploadCapability","RestProvider","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","trackedResources","isPublic","path","messages","fr","frenchMessages","i18nProvider","App","react","Admin","authProvider","AuthProvider","Resource","list","create","edit","show","icon","MonetizationOnIcon","LocalPizzaIcon","LocalDrinkIcon","LocalDiningIcon","AddCircleIcon","RestaurantIcon","ViewCarouselIcon","StarIcon","PersonIcon","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f31d49d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ListController } from 'react-admin';\r\nimport { Chart } from \"react-google-charts\";\r\nimport moment from 'moment';\r\n\r\nconst options = {\r\n  title: \"\",\r\n  hAxis: { title: \"Jours des commandes\" },\r\n  vAxis: { title: \"Chiffres d'affaires totales\", viewWindow: { min: 0 } },\r\n  legend: \"none\"\r\n};\r\nlet graphData = [];\r\n\r\nlet valuesPerDay = [];\r\nlet values;\r\nlet hadData = false;\r\nfunction getData(data){\r\n  values = Object.keys(data).map(function (i) {\r\n    let date = moment(data[i].createdAt).format(\"DD/MM/YYYY\");\r\n    let exist = 0;\r\n    valuesPerDay.map(function (item){\r\n      if(item[0] === date){\r\n        item[1] += data[i].totalAmount;\r\n        exist = 1;\r\n      }\r\n    });\r\n    if(exist !== 1 || valuesPerDay.length === 0){\r\n      valuesPerDay.push([date,data[i].totalAmount,moment(data[i].createdAt)])\r\n    }\r\n    return Object.values(data[i]);\r\n  })\r\n  if(values !== undefined && values.length !== 0){\r\n    valuesPerDay.sort(function(a,b){\r\n      return moment( a[2] ).format(\"YYYYMMDD\") - moment( b[2] ).format(\"YYYYMMDD\");\r\n    });\r\n    valuesPerDay.unshift(['Jour','Chiffre d\\'affaire','nothing']);\r\n    valuesPerDay = valuesPerDay.map(function (item){\r\n      item.pop();\r\n      return item;\r\n    });\r\n    graphData = valuesPerDay;\r\n    hadData = true;\r\n  }\r\n}\r\n\r\nexport const LineGraph = (props) => (\r\n  <ListController {...props.source}>\r\n    {controllerProps => (\r\n        <>\r\n        {!hadData && getData(controllerProps.data)}\r\n        {graphData !== undefined && graphData.length !== 0 && \r\n          <Chart\r\n            chartType=\"LineChart\"\r\n            data={graphData}\r\n            options={options}\r\n            width=\"100%\"\r\n            height=\"400px\"\r\n            legendToggle\r\n          />\r\n        }\r\n        </>\r\n    )}    \r\n  </ListController>\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de {record ? `\"${record.extraName}\"` : ''}</span>;\r\n};\r\n\r\nexport const ExtraShow = (props) => (\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source=\"extraName\" label=\"Nom\"/>\r\n            <TextField source=\"extraPrice\" label=\"Prix\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from 'react';\r\nimport {Edit, SimpleForm, TextInput,NumberInput,required,number,minValue,maxValue} from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Modification de {record ? `\"${record.extraName}\"` : ''}</span>;\r\n};\r\n\r\nexport const ExtraEdit = (props) => (\r\n    <Edit title={<PostTitle/>} {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"extraName\" label=\"Nom\" validate={[required()]}/>\r\n            <NumberInput source=\"extraPrice\" label=\"Prix\" validate={[required(), number(), minValue(0),maxValue(999)]}/>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, SimpleForm, TextInput,NumberInput,required,number,minValue,maxValue} from 'react-admin';\r\n\r\nexport const ExtraCreate = (props) => (\r\n    <Create title=\"Création d'un supplément\" {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"extraName\" label=\"Nom\" validate={[required()]}/>\r\n            <NumberInput source=\"extraPrice\" label=\"Prix\" validate={[required(), number(), minValue(0),maxValue(999)]}/>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport { List, Datagrid, TextField,EditButton,ShowButton  } from 'react-admin';\r\n\r\nexport const ExtraList = (props) => (\r\n    <List title=\"Liste des suppléments\" {...props}>\r\n        <Datagrid>\r\n            <TextField source=\"extraName\" label=\"Nom\"/>\r\n            <TextField source=\"extraPrice\" label=\"Prix\"/>\r\n            <ShowButton/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField,ImageField } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de {record ? `\"${record.drinkName}\"` : ''}</span>;\r\n};\r\n\r\nexport const DrinkShow = (props) => (\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n            <ImageField source=\"image[0].src\" label=\"Image\"/>\r\n            <TextField source=\"drinkName\" label=\"Nom\"/>\r\n            <TextField source=\"drinkPrice\" label=\"Prix\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from 'react';\r\nimport {Edit, SimpleForm,ImageInput,ImageField, TextInput,NumberInput,required,number,minValue,maxValue } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Modification de {record ? `\"${record.drinkName}\"` : ''}</span>;\r\n};\r\n\r\nexport const DrinkEdit = (props) => (\r\n    <Edit title={<PostTitle/>} {...props}>\r\n        <SimpleForm>\r\n            <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\" placeholder=\"Cliquer ici ou déposer une image pour l'uploader\" required multiple>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>\r\n            <TextInput source=\"drinkName\" label=\"Nom\" validate={[required()]}/>\r\n            <NumberInput source=\"drinkPrice\" label=\"Prix\"  validate={[required(), number(), minValue(0),maxValue(999)]}/>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, SimpleForm, TextInput,ImageInput,ImageField,NumberInput,required,number,minValue,maxValue} from 'react-admin';\r\n\r\nexport const DrinkCreate = (props) => (\r\n    <Create title=\"Création d'une boisson\" {...props}>\r\n        <SimpleForm>\r\n            <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\" placeholder=\"Cliquer ici ou déposer une image pour l'uploader\" required multiple>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>\r\n            <TextInput source=\"drinkName\" label=\"Nom\" validate={[required()]}/>\r\n            <NumberInput source=\"drinkPrice\" label=\"Prix\"  validate={[required(), number(), minValue(0),maxValue(999)]}/>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport { List, Datagrid, TextField,ImageField,EditButton,ShowButton  } from 'react-admin';\r\n\r\nexport const DrinkList = (props) => (\r\n    <List title=\"Liste des boissons\" {...props}>\r\n        <Datagrid>\r\n            <ImageField source=\"image[0].src\" label=\"Image\"/>\r\n            <TextField source=\"drinkName\" label=\"Nom\"/>\r\n            <TextField source=\"drinkPrice\" label=\"Prix\"/>\r\n            <ShowButton/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField, ImageField } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de {record ? `\"${record.mainName}\"` : ''}</span>;\r\n};\r\n\r\nexport const MainShow = (props) => (\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n            <ImageField source=\"image[0].src\" label=\"Image\"/>\r\n            <TextField source=\"mainName\" label=\"Nom\"/>\r\n            <TextField source=\"mainPrice\" label=\"Prix\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from 'react';\r\nimport {Edit, SimpleForm, TextInput,ImageField,ImageInput,NumberInput,required,number,minValue,maxValue } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Modification de {record ? `\"${record.mainName}\"` : ''}</span>;\r\n};\r\n\r\nexport const MainEdit = (props) => (\r\n    <Edit title={<PostTitle/>} {...props}>\r\n        <SimpleForm>\r\n            <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\" placeholder=\"Cliquer ici ou déposer une image pour l'uploader\" required multiple>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>\r\n            <TextInput source=\"mainName\" label=\"Nom\" validate={[required()]}/>\r\n            <NumberInput source=\"mainPrice\" label=\"Prix\" validate={[required(), number(), minValue(0),maxValue(999)]}/>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, SimpleForm, TextInput, ImageInput, ImageField,NumberInput,required,number,minValue,maxValue} from 'react-admin';\r\n\r\nexport const MainCreate = (props) => (\r\n    <Create title=\"Création d'un plat\" {...props}>\r\n        <SimpleForm>\r\n            <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\" placeholder=\"Cliquer ici ou déposer une image pour l'uploader\" required multiple>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>\r\n            <TextInput source=\"mainName\" label=\"Nom\" validate={[required()]}/>\r\n            <NumberInput source=\"mainPrice\" label=\"Prix\" validate={[required(), number(), minValue(0),maxValue(999)]}/>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport { List, Datagrid, TextField,ImageField,EditButton,ShowButton  } from 'react-admin';\r\n\r\nexport const MainList = (props) => (\r\n    <List title=\"Liste des plats\" {...props}>\r\n        <Datagrid>\r\n            <ImageField source=\"image[0].src\" label=\"Image\"/>\r\n            <TextField source=\"mainName\" label=\"Nom\"/>\r\n            <TextField source=\"mainPrice\" label=\"Prix\"/>\r\n            <ShowButton/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField,ImageField } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de {record ? `\"${record.restaurantName}\"` : ''}</span>;\r\n};\r\n\r\nexport const RestoShow = (props) => (\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n            <ImageField source=\"image[0].src\" label=\"Image\"/>\r\n            <TextField source=\"restaurantName\" label=\"Nom du restaurant\"/>\r\n            <TextField source=\"restaurantType\" label=\"Type du restaurant\"/>\r\n            <TextField source=\"restaurantAddress\" label=\"Adresse du restaurant\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from 'react';\r\nimport {Edit, SimpleForm, ImageInput,ImageField, TextInput, SelectInput,required } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Modification de {record ? `\"${record.restaurantName}\"` : ''}</span>;\r\n};\r\n\r\nexport const RestoEdit = (props) => (\r\n    <Edit title={<PostTitle/>} {...props}>\r\n        <SimpleForm>\r\n            <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\" placeholder=\"Cliquer ici ou déposer une image pour l'uploader\" required multiple>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>\r\n            <TextInput source=\"restaurantName\" label=\"Nom du restaurant\" validate={[required()]}/>\r\n            <TextInput source=\"restaurantAddress\" label=\"Adresse du restaurant\" validate={[required()]}/>\r\n            <SelectInput source=\"restaurantType\" label=\"Type du restaurant\" validate={[required()]} choices={[\r\n                { id: 'tacos', name: 'Tacos' },\r\n                { id: 'kebab', name: 'Kebab' },\r\n                { id: 'sushi', name: 'Sushi' },\r\n            ]} />\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, SimpleForm, ImageField, TextInput,SelectInput, ImageInput,required} from 'react-admin';\r\n\r\nexport const RestoCreate = (props) => (\r\n    <Create title=\"Ajout d'un restaurant\" {...props}>\r\n        <SimpleForm>\r\n            <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\" placeholder=\"Cliquer ici ou déposer une image pour l'uploader\" required multiple>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>\r\n            <TextInput source=\"restaurantName\" label=\"Nom du restaurant\" validate={[required()]}/>\r\n            <TextInput source=\"restaurantAddress\" label=\"Adresse du restaurant\" validate={[required()]}/>\r\n            <SelectInput source=\"restaurantType\" label=\"Type du restaurant\" validate={[required()]} choices={[\r\n                { id: 'tacos', name: 'Tacos' },\r\n                { id: 'kebab', name: 'Kebab' },\r\n                { id: 'sushi', name: 'Sushi' },\r\n            ]} />\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport { List, Datagrid, TextField,ImageField,EditButton,ShowButton } from 'react-admin';\r\n\r\nexport const RestoList = (props) => (\r\n    <List title=\"Liste des restaurants\" {...props}>\r\n        <Datagrid>\r\n            <ImageField source=\"image[0].src\" label=\"Image\"/>\r\n            <TextField source=\"restaurantName\" label=\"Nom\"/>\r\n            <TextField source=\"restaurantAddress\" label=\"Adresse\"/>\r\n            <TextField source=\"restaurantType\" label=\"Type\"/>\r\n            <ShowButton/>\r\n            <EditButton />\r\n        </Datagrid> \r\n    </List>\r\n);","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField,ImageField} from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de {record ? `\"${record.starterName}\"` : ''}</span>;\r\n};\r\n\r\nexport const StarterShow = (props) => (\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n            <ImageField  source=\"image[0].src\" label=\"Image\"/>\r\n            <TextField source=\"starterName\" label=\"Nom\"/>\r\n            <TextField source=\"starterPrice\" label=\"Prix\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from 'react';\r\nimport {Edit, SimpleForm, TextInput,ImageInput ,ImageField,NumberInput,required,number,minValue,maxValue } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de {record ? `\"${record.starterName}\"` : ''}</span>;\r\n};\r\n\r\nexport const StarterEdit = (props) => (\r\n    <Edit title={<PostTitle/>} {...props}>\r\n        <SimpleForm>\r\n            <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\" placeholder=\"Cliquer ici ou déposer une image pour l'uploader\" required multiple>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>\r\n            <TextInput source=\"starterName\" label=\"Nom\" validate={[required()]}/> \r\n            <NumberInput source=\"starterPrice\" label=\"Prix\" validate={[required(), number(), minValue(0),maxValue(999)]}/>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, SimpleForm, ImageInput, TextInput, ImageField,NumberInput,required,number,minValue,maxValue } from 'react-admin';\r\n\r\nexport const StarterCreate = (props) => (\r\n    <Create title=\"Création d'une entrée\" {...props}>\r\n        <SimpleForm>\r\n            <ImageInput source=\"image\" label=\"Image\" accept=\"image/*\" placeholder=\"Cliquer ici ou déposer une image pour l'uploader\" required multiple>\r\n                <ImageField source=\"src\" title=\"title\" />\r\n            </ImageInput>\r\n            <TextInput source=\"starterName\" label=\"Nom\" validate={[required()]}/> \r\n            <NumberInput source=\"starterPrice\" label=\"Prix\" validate={[required(), number(), minValue(0),maxValue(999)]}/>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport { List, Datagrid, TextField,ImageField ,EditButton,ShowButton  } from 'react-admin';\r\n\r\nexport const StarterList = (props) => (\r\n    <List title=\"Liste des entrées\" {...props}>\r\n        <Datagrid>\r\n            <ImageField  source=\"image[0].src\" label=\"Image\"/>\r\n            <TextField source=\"starterName\" label=\"Nom\"/>\r\n            <TextField source=\"starterPrice\" label=\"Prix\"/>\r\n            <ShowButton/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField,DateField, BooleanField,ReferenceField } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Modification de la commande</span>;\r\n};\r\n\r\nexport const OrderShow = (props) => (\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n        <BooleanField source=\"paid\" label=\"Payé ?\"/>\r\n                <BooleanField source=\"checkedOut\" label=\"Préparé ?\"/>\r\n                <BooleanField source=\"delivered\" label=\"Livré ?\"/>\r\n                <DateField source=\"createdAt\" label=\"Date\"/>\r\n                <ReferenceField label=\"Client\" source=\"user_id\" reference=\"users\">\r\n                    <TextField source=\"displayName\" />\r\n                </ReferenceField>\r\n                <TextField source=\"totalAmount\" label=\"Total\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from 'react';\r\nimport {Edit, SimpleForm, BooleanInput } from 'react-admin';\r\n\r\n\r\nexport const OrderEdit = (props) => (\r\n    <Edit title=\" \" {...props}>\r\n        <SimpleForm form={`post_edit_${props.id}`}>\r\n            <BooleanInput source=\"paid\" label=\"Payé\" style={{ display: 'inline', float: 'left', marginLeft: '20px' }}/>\r\n            <BooleanInput source=\"checkedOut\" label=\"Préparé\" style={{ display: 'inline', float: 'left', marginLeft: '20px' }}/>\r\n            <BooleanInput source=\"delivered\" label=\"Livré\" style={{ display: 'inline', float: 'left', marginLeft: '20px' }}/>\r\n            <br/><br/>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, SimpleForm, TextInput } from 'react-admin';\r\n\r\nexport const OrderCreate = (props) => (\r\n    <Create {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"red\" />\r\n            <TextInput source=\"blue\"/>\r\n            <TextInput source=\"green\"/>\r\n\r\n        </SimpleForm>\r\n    </Create>\r\n);","/* eslint-disable react/no-multi-comp */\r\nimport React from 'react';\r\nimport { ListController } from 'react-admin';\r\nimport { Chart } from \"react-google-charts\";\r\nimport moment from 'moment';\r\n\r\nconst options = {\r\n  title: \"\",\r\n  hAxis: { title: \"Nombre de commande\" },\r\n  vAxis: { title: \"Jour de la semaine\", viewWindow: { min: 0 } },\r\n  legend: \"none\"\r\n};\r\n\r\nlet graphData = [];\r\n\r\nlet values;\r\nlet valuesPerDay = [[\"Dimanche\",0],[\"Lundi\",0],[\"Mardi\",0],[\"Mecredi\",0],[\"Jeudi\",0],[\"Vendredi\",0],[\"Samedi\",0]];\r\nlet hadData = false;\r\n\r\nfunction getData(data){\r\n  moment.locale('fr')\r\n  values = Object.keys(data).map(function (i) {\r\n    let date = data[i].createdAt;\r\n    let day = moment(date).day();\r\n    if(valuesPerDay[day] !== undefined){\r\n      valuesPerDay[day][1] += 1;\r\n    }\r\n    return Object.values(data[i]);\r\n  })\r\n  graphData = valuesPerDay;\r\n  \r\n  if(values !== undefined && values.length !== 0){\r\n    valuesPerDay.unshift([\"Jour\",\"Commandes\"]);\r\n    graphData = valuesPerDay;\r\n    hadData = true;\r\n  }\r\n}\r\n\r\nexport const BarGraph = (props) => (\r\n  <ListController {...props.source}>\r\n    {controllerProps => (\r\n        <>\r\n        {!hadData && getData(controllerProps.data)}\r\n        {graphData !== undefined && graphData.length !== 0 && \r\n          <Chart chartType=\"BarChart\" width=\"100%\" height=\"400px\" data={graphData} options={options} legendToggle/>\r\n        }\r\n        </>\r\n    )}\r\n  \r\n  </ListController>\r\n);\r\n","import React from 'react';\r\nimport { List, Datagrid,DateField, BooleanField,ShowButton,CardActions,ExportButton,TextField,ReferenceField  } from 'react-admin';\r\nimport { OrderEdit } from './Edit';\r\nimport {LineGraph} from '../Charts/LineChart';\r\nimport {BarGraph} from '../Charts/BarChart';\r\n\r\nconst PostActions = ({\r\n    currentSort,\r\n    exporter,\r\n    filterValues,\r\n    resource,\r\n    total\r\n}) => (\r\n    <CardActions>\r\n        <ExportButton\r\n            disabled={total === 0}\r\n            resource={resource}\r\n            sort={currentSort}\r\n            filter={filterValues}\r\n            exporter={exporter}\r\n        />\r\n    </CardActions>\r\n);\r\nexport const OrderList = (props) => (\r\n    <div>\r\n        <List title=\"Liste des commandes\" {...props} actions={<PostActions />} sort={{ field: 'checkedOut', order: 'DESC' }}>\r\n            <Datagrid expand={<OrderEdit />}>\r\n                <BooleanField source=\"paid\" label=\"Payé ?\"/>\r\n                <BooleanField source=\"checkedOut\" label=\"Préparé ?\"/>\r\n                <BooleanField source=\"delivered\" label=\"Livré ?\"/>\r\n                <DateField source=\"createdAt\" label=\"Date\"/>\r\n                <ReferenceField label=\"Client\" source=\"user_id\" reference=\"users\">\r\n                    <TextField source=\"displayName\" />\r\n                </ReferenceField>\r\n                <TextField source=\"totalAmount\" label=\"Total\"/>\r\n                <ShowButton/>\r\n            </Datagrid>\r\n        </List>\r\n        <h2>Graphique des ventes</h2>\r\n        <LineGraph source={{...props}}/>\r\n\r\n        <h2>Graphique nombre de couvert par jour de semaine</h2>\r\n        <BarGraph source={{...props}}/>\r\n    </div>\r\n    \r\n);","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField, BooleanField } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de {record ? `\"${record.displayName}\"` : ''}</span>;\r\n};\r\n\r\nexport const UserShow = (props) => (\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source=\"displayName\" label=\"Nom\"/>\r\n            <TextField source=\"email\" label=\"Email\"/>\r\n            <BooleanField source=\"admin\" label=\"Admin ?\"/>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from 'react';\r\nimport {Edit, SimpleForm, TextInput,BooleanInput,email,required } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Modification de {record ? `\"${record.displayName}\"` : ''}</span>;\r\n};\r\n\r\nexport const UserEdit = (props) => (\r\n    <Edit title={<PostTitle/>} {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"displayName\" label=\"Nom\" validate={[required()]}/>\r\n            <TextInput source=\"email\" label=\"Email\" validate={[required(),email()]}/>\r\n            <BooleanInput source=\"admin\" label=\"Admin\" validate={[required()]}/>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, SimpleForm, TextInput,BooleanInput,email,required} from 'react-admin';\r\n\r\nexport const UserCreate = (props) => (\r\n    <Create title=\"Création d'un utilisateur\" {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"displayName\" label=\"Nom\" validate={[required()]}/>\r\n            <TextInput source=\"email\" label=\"Email\" validate={[required(),email()]}/>\r\n            <BooleanInput source=\"admin\" label=\"Admin\" validate={[required()]}/>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport { List, Datagrid, TextField,EditButton,ShowButton,BooleanField,EmailField } from 'react-admin';\r\n\r\nexport const UserList = (props) => (\r\n    <List title=\"Liste des utilisateurs\" {...props}>\r\n        <Datagrid>\r\n            <TextField source=\"displayName\" label=\"Nom\"/>\r\n            <EmailField source=\"email\" label=\"Email\"/>\r\n            <BooleanField source=\"admin\" label=\"Admin ?\"/>\r\n            <ShowButton/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField, ReferenceField } from 'react-admin';\r\nimport QRCode from 'qrcode.react';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de {record ? `\"${record.tableName}\"` : ''}</span>;\r\n};\r\n\r\nlet link = document.createElement('a');\r\nlink.textContent = 'Télécharger l\\'image';\r\n\r\nlink.addEventListener('click', function(ev) {\r\n    const canvas = document.querySelector('.HpQrcode > canvas');\r\n    link.href = canvas.toDataURL();\r\n    link.download = \"QRCode.png\";\r\n}, false);\r\n\r\nfunction interval(){\r\n    // do whatever you like here\r\n    if(!document.querySelector('.HpQrcode')){\r\n        setTimeout(interval, 1000);\r\n    }else{\r\n        document.querySelector('.HpQrcode').appendChild(link);\r\n    }\r\n}\r\n\r\n\r\nexport const TableShow = (props) => (\r\n\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n            {interval()}\r\n            <TextField source=\"tableName\" label=\"Nom\"/>\r\n            <TextField source=\"tableZone\" label=\"Zone\"/>\r\n            <ReferenceField label=\"Restaurant\" source=\"resto_id\" reference=\"restos\">\r\n                <TextField source=\"restaurantName\" />\r\n            </ReferenceField>\r\n            <div className=\"HpQrcode\">\r\n            \r\n\r\n                <QRCode\r\n                    value={props.id}\r\n                    size={180}\r\n                    level={'H'}\r\n                />\r\n            </div>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);\r\n ","import React from 'react';\r\nimport {Edit, SimpleForm, ReferenceInput,SelectInput, TextInput,required } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Modification de {record ? `\"${record.tableName}\"` : ''}</span>;\r\n};\r\n\r\n\r\nexport const TableEdit = (props) => (\r\n    <Edit title={<PostTitle/>} {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"tableName\" label=\"Nom\" validate={[required()]}/>\r\n            <TextInput source=\"tableZone\" label=\"Zone\" validate={[required()]}/>\r\n            <ReferenceInput label=\"Restaurant\" source=\"resto_id\" reference=\"restos\" validate={[required()]}>\r\n                <SelectInput optionText=\"restaurantName\" />\r\n            </ReferenceInput>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, ReferenceInput, SimpleForm, SelectInput, TextInput,required } from 'react-admin';\r\n\r\nexport const TableCreate = (props) => (\r\n    <Create {...props}>\r\n        <SimpleForm>\r\n            <TextInput source=\"tableName\" label=\"Nom\" validate={[required()]}/>\r\n            <TextInput source=\"tableZone\" label=\"Zone\" validate={[required()]}/>\r\n            <ReferenceInput label=\"Restaurant\" source=\"resto_id\" reference=\"restos\" validate={[required()]}>\r\n                <SelectInput optionText=\"restaurantName\" />\r\n            </ReferenceInput>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport { List, Datagrid, TextField,ReferenceField,EditButton,ShowButton  } from 'react-admin';\r\n\r\nexport const TableList = (props) => (\r\n    <List title=\"Liste des tables\" {...props}>\r\n        <Datagrid>\r\n            <TextField source=\"tableName\" label=\"Nom\"/>\r\n            <TextField source=\"tableZone\" label=\"Zone\"/>\r\n            <ReferenceField label=\"Restaurant\" source=\"resto_id\" reference=\"restos\">\r\n                <TextField source=\"restaurantName\" />\r\n            </ReferenceField>\r\n            <ShowButton/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);","import React from 'react';\r\nimport { Show, SimpleShowLayout, TextField,ReferenceField } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Détail de la note</span>;\r\n};\r\n\r\nexport const RatingShow = (props) => (\r\n    <Show title={<PostTitle/>} {...props}>\r\n        <SimpleShowLayout>\r\n            <TextField source=\"rate\" label=\"Note\"/>\r\n            <ReferenceField label=\"Utilisateur\" source=\"userId\" reference=\"users\">\r\n                <TextField source=\"displayName\" />\r\n            </ReferenceField>\r\n            <ReferenceField label=\"Restaurant\" source=\"restoId\" reference=\"restos\">\r\n                <TextField source=\"restaurantName\" />\r\n            </ReferenceField>\r\n        </SimpleShowLayout>\r\n    </Show>\r\n);","import React from 'react';\r\nimport {Edit, SimpleForm, ReferenceInput,SelectInput ,NumberInput,required,number,minValue,maxValue } from 'react-admin';\r\n\r\nconst PostTitle = ({ record }) => {\r\n    return <span>Modification de la note</span>;\r\n};\r\n\r\nexport const RatingEdit = (props) => (\r\n    <Edit title={<PostTitle/>} {...props}>\r\n        <SimpleForm>\r\n            <NumberInput source=\"rate\" label=\"Note\" validate={[required(), number(), minValue(0),maxValue(5)]}/>\r\n            <ReferenceInput label=\"Utilisateur\" source=\"userId\" reference=\"users\" validate={[required()]}>\r\n                <SelectInput  optionText=\"displayName\" />\r\n            </ReferenceInput>\r\n            <ReferenceInput label=\"Restaurant\" source=\"restoId\" reference=\"restos\" validate={[required()]}>\r\n                <SelectInput  optionText=\"restaurantName\" />\r\n            </ReferenceInput>\r\n        </SimpleForm>\r\n    </Edit>\r\n);","// in src/posts.js\r\nimport React from 'react';\r\nimport { Create, SimpleForm,ReferenceInput,SelectInput ,NumberInput,required,number,minValue,maxValue } from 'react-admin';\r\n\r\nexport const RatingCreate = (props) => (\r\n    <Create title=\"Création d'une note\" {...props}>\r\n        <SimpleForm>\r\n            <NumberInput source=\"rate\" label=\"Note\" validate={[required(), number(), minValue(0),maxValue(5)]}/>\r\n            <ReferenceInput label=\"Utilisateur\" source=\"userId\" reference=\"users\" validate={[required()]}>\r\n                <SelectInput  optionText=\"displayName\" />\r\n            </ReferenceInput>\r\n            <ReferenceInput label=\"Restaurant\" source=\"restoId\" reference=\"restos\" validate={[required()]}>\r\n                <SelectInput  optionText=\"restaurantName\" />\r\n            </ReferenceInput>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import React from 'react';\r\nimport { List, Datagrid, TextField,ReferenceField ,EditButton,ShowButton  } from 'react-admin';\r\n\r\nexport const RatingList = (props) => (\r\n    <List title=\"Liste des notes\" {...props}>\r\n        <Datagrid>\r\n            <TextField source=\"rate\" label=\"Note\"/>\r\n            <ReferenceField label=\"Utilisateur\" source=\"userId\" reference=\"users\">\r\n                <TextField source=\"displayName\" />\r\n            </ReferenceField>\r\n            <ReferenceField label=\"Restaurant\" source=\"restoId\" reference=\"restos\">\r\n                <TextField source=\"restaurantName\" />\r\n            </ReferenceField>\r\n            <ShowButton/>\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);","/**\r\n * Convert a `File` object returned by the upload input into\r\n * a base 64 string. That's easier to use on FakeRest, used on\r\n * the ng-admin example. But that's probably not the most optimized\r\n * way to do in a production database.\r\n */\r\nconst convertFileToBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file.rawFile);\r\n\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = reject;\r\n});\r\n\r\n/**\r\n * For posts update only, convert uploaded image in base 64 and attach it to\r\n * the `picture` sent property, with `src` and `title` attributes.\r\n */\r\nconst addUploadCapabilities = requestHandler => (type, resource, params) => {\r\n    if ((type === 'UPDATE' || type === 'CREATE')) {\r\n        if (params.data.image && params.data.image.length) {\r\n            // only freshly dropped image are instance of File\r\n            const formerPictures = params.data.image.filter(p => !(p.rawFile instanceof File));\r\n            const newPictures = params.data.image.filter(p => p.rawFile instanceof File);\r\n            return Promise.all(newPictures.map(convertFileToBase64))\r\n            .then(base64Pictures => base64Pictures.map(picture64 => ({\r\n                src: picture64,\r\n                title: `${params.data.title}`,\r\n            })))\r\n            .then(transformedNewPictures => requestHandler(type, resource, {\r\n                ...params,\r\n                data: {\r\n                    ...params.data,\r\n                    image: [...transformedNewPictures, ...formerPictures],\r\n                },\r\n            }));         \r\n        }\r\n    }\r\n\r\n    return requestHandler(type, resource, params);\r\n};\r\n\r\nexport default addUploadCapabilities;","import * as React from 'react';\nimport { Admin, Resource } from 'react-admin';\n \nimport { ExtraShow } from './Components/Extra/Show';\nimport { ExtraEdit } from './Components/Extra/Edit';\nimport { ExtraCreate } from './Components/Extra/Create';\nimport { ExtraList } from './Components/Extra/List';\n\nimport { DrinkShow } from './Components/Drink/Show';\nimport { DrinkEdit } from './Components/Drink/Edit';\nimport { DrinkCreate } from './Components/Drink/Create';\nimport { DrinkList } from './Components/Drink/List';\n\nimport { MainShow } from './Components/Main/Show';\nimport { MainEdit } from './Components/Main/Edit';\nimport { MainCreate } from './Components/Main/Create';\nimport { MainList } from './Components/Main/List';\n\nimport { RestoShow } from './Components/Resto/Show';\nimport { RestoEdit } from './Components/Resto/Edit';\nimport { RestoCreate } from './Components/Resto/Create';\nimport { RestoList } from './Components/Resto/List';\n\nimport { StarterShow } from './Components/Starter/Show';\nimport { StarterEdit } from './Components/Starter/Edit';\nimport { StarterCreate } from './Components/Starter/Create';\nimport { StarterList } from './Components/Starter/List';\n\nimport { OrderShow } from './Components/Order/Show';\nimport { OrderEdit } from './Components/Order/Edit';\nimport { OrderCreate } from './Components/Order/Create';\nimport { OrderList } from './Components/Order/List';\n\nimport { UserShow } from './Components/User/Show';\nimport { UserEdit } from './Components/User/Edit';\nimport { UserCreate } from './Components/User/Create';\nimport { UserList } from './Components/User/List';\n\nimport { TableShow } from './Components/Table/Show';\nimport { TableEdit } from './Components/Table/Edit';\nimport { TableCreate } from './Components/Table/Create';\nimport { TableList } from './Components/Table/List';\n\nimport { RatingShow } from './Components/Rating/Show';\nimport { RatingEdit } from './Components/Rating/Edit';\nimport { RatingCreate } from './Components/Rating/Create';\nimport { RatingList } from './Components/Rating/List';\n\n/* Icone */\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport StarIcon from '@material-ui/icons/Star';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport LocalDrinkIcon from '@material-ui/icons/LocalDrink';\nimport LocalDiningIcon from '@material-ui/icons/LocalDining';\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport ViewCarouselIcon from '@material-ui/icons/ViewCarousel';\n\nimport { RestProvider, AuthProvider } from 'ra-data-firebase-client';\nimport addUploadCapability from './Base64Uploader'\n\nimport frenchMessages from 'ra-language-french';\n\n/* Configuration firebase */\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\n};\n/* Les ressources etant tracker venant de firebase */\nconst trackedResources = [\n  {name: \"orders\",isPublic: true,},\n  {name: \"users\",isPublic: true},\n  {name: \"drinks\",isPublic: true},\n  {name: \"ratings\",isPublic: true},\n  {name: \"mains\",path:\"moozemains\",isPublic: true},\n  {name: \"extras\",isPublic: true},\n  {name: \"restos\",isPublic: true},\n  {name: \"starters\",isPublic: true},\n  {name: \"tables\",isPublic: true}\n];\n/* Pour l'authentification */\nconst authConfig = {userProfilePath: '/users/', userAdminProp: 'admin'};\n\nconst shouldUseAuth = true;\n/* Pour l'accès au données (utilisation de provider firebase) */\nconst dataProvider = addUploadCapability(RestProvider(firebaseConfig, { trackedResources }));\n/* Pour la traduction */\nconst messages = {\n  fr: frenchMessages,\n}\nconst i18nProvider = locale => messages[locale];\n\nclass App extends React.Component {\n  render() {\n    return (\n      /* Configuration du composant de base admin de react admin */\n      <Admin \n        locale=\"fr\"\n        i18nProvider={i18nProvider}\n        dataProvider={dataProvider}\n        authProvider={shouldUseAuth ? AuthProvider(authConfig) : null}>\n        {/* Atribue des composant au ressources venant de firebase */}\n        <Resource name=\"orders\" options={{ label: 'Commandes' }} list={OrderList} create={OrderCreate} edit={OrderEdit} show={OrderShow} icon={MonetizationOnIcon}/>\n        <Resource name=\"mains\" options={{ label: 'Plats' }} list={MainList} create={MainCreate} edit={MainEdit} show={MainShow} icon={LocalPizzaIcon}/>\n        <Resource name=\"drinks\" options={{ label: 'Boissons' }} list={DrinkList} create={DrinkCreate} edit={DrinkEdit} show={DrinkShow} icon={LocalDrinkIcon}/>\n        <Resource name=\"starters\" options={{ label: 'Entrées' }} list={StarterList} create={StarterCreate} edit={StarterEdit} show={StarterShow} icon={LocalDiningIcon}/>\n        <Resource name=\"extras\" options={{ label: 'Suppléments' }} list={ExtraList} create={ExtraCreate} edit={ExtraEdit} show={ExtraShow} icon={AddCircleIcon}/>\n        <Resource name=\"restos\" options={{ label: 'Restaurants' }} list={RestoList} create={RestoCreate} edit={RestoEdit} show={RestoShow} icon={RestaurantIcon}/>\n        <Resource name=\"tables\" options={{ label: 'Tables' }} list={TableList} create={TableCreate} edit={TableEdit} show={TableShow} icon={ViewCarouselIcon}/>\n        <Resource name=\"ratings\" options={{ label: 'Notes' }} list={RatingList} create={RatingCreate} edit={RatingEdit} show={RatingShow} icon={StarIcon}/>\n        <Resource name=\"users\" options={{ label: 'Utilisateurs' }} list={UserList} create={UserCreate} edit={UserEdit} show={UserShow} icon={PersonIcon}/>\n      </Admin>\n    );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}